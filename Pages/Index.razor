@page "/"
@using Models
@inject NavigationManager navigate

<PageTitle>Game Catalogue</PageTitle>

<h1>Game Catalogue</h1>

<div class="row mb-4">
    <div class="col-sm-6">
        <button type="button" class="btn btn-primary" @onclick="createGame">New Game</button>
    </div>
</div>

@if(games is null){
    <p><em>Loading...</em></p>
} else{
    <DeleteGame Game="@currentGame" OnClose="@OnDeleteModalClose"></DeleteGame>
    <table class="table table-stiped table-bordered table-hover">
        <thead class="table-dark">
            <th>Id</th>
            <th>Name</th>
            <th>Genre</th>
            <th>Price</th>
            <th>Relase Date</th>
            <th></th>
        </thead>
        <tbody>
            @foreach(var game in games){
                <tr>
                    <td>@game.Id</td>
                    <td>@game.Name</td>
                    <td>@game.Genre</td>
                    <td>@game.Price</td>
                    <td>@game.RelaseDate.ToString("dd/MM/yyyy")</td>
                    <td> 
                        <button class="btn btn-primary" @onclick="(() => EditGame(game.Id))">
                            <i class="oi oi-pencil"></i>
                        </button>
                        <button class="btn btn-danger" 
                                data-bs-toggle="modal" 
                                data-bs-target="#deleteModal"
                                @onclick="(() => currentGame = game)">
                            <i class="oi oi-x"></i>
                        </button>
                    </td>
                </tr>
            }

        </tbody>
    </table>

}

@code{
   private Game[]? games;
   private Game? currentGame;

   protected override void OnInitialized(){
    games = GameClient.GetGames();
   }

   private void createGame(){
    navigate.NavigateTo("/game");
   }

   private void EditGame(int id){
    navigate.NavigateTo($"/game/{id}");
   }

   private void OnDeleteModalClose(bool accepted){
        if(accepted){
            GameClient.DeleteGame(currentGame!.Id);
            games = GameClient.GetGames();
        }
   }
}